@server=http://localhost:3000
@createdHostId = {{createHost.response.body.$.id}}
@token = {{signin.response.body.$.token}}

### Create a host
# @name createHost
POST {{server}}/api/hosts
Content-Type: application/json

{
  "name": "DNS Server",
  "address": "1.1.1.1",
  "tags": ["production", "dns"]
}

### Create a host without name or address
POST {{server}}/api/hosts
Content-Type: application/json

{
  "name": "DNS Server"
}

### Read hosts
GET {{server}}/api/hosts

### Read a host by name
GET {{server}}/api/hosts?name=Google%20DNS
# GET {{server}}/api/hosts?name=DNS
# GET {{server}}/api/hosts?name=dns

### Read a host by id
GET {{server}}/api/hosts/{{createdHostId}}

### Read a host by id with invalid id
GET {{server}}/api/hosts/x

### Update a host
PUT {{server}}/api/hosts/{{createdHostId}}
Content-Type: application/json

{
  "name": "Cloudflare DNS",
  "address": "1.1.1.1",
  "tags": ["production", "dns", "cloudflare"]
}

### Update a host without name or address
PUT {{server}}/api/hosts/{{createdHostId}}
Content-Type: application/json

{
  "name": "Cloudflare DNS"
}

### Update a host with invalid id
PUT {{server}}/api/hosts/x
Content-Type: application/json

{
  "name": "Cloudflare DNS",
  "address": "1.1.1.1"
}

### Delete a host
DELETE {{server}}/api/hosts/{{createdHostId}}

### Delete a host with invalid id
DELETE {{server}}/api/hosts/x

### Execute ping on a host (3 pings)
POST {{server}}/api/hosts/{{createdHostId}}/pings/3

### Execute ping with invalid count
POST {{server}}/api/hosts/{{createdHostId}}/pings/abc

### Get pings from a specific host
GET {{server}}/api/hosts/{{createdHostId}}/pings

### Get all pings
GET {{server}}/api/pings

### Get all tags
GET {{server}}/api/tags

### Get hosts by tag
GET {{server}}/api/tags/production/hosts

### Get hosts by nonexistent tag
GET {{server}}/api/tags/nonexistent/hosts

### Create a user
# @name createUser
POST {{server}}/api/users
Content-Type: application/json

{
  "name": "Test User",
  "email": "test@example.com",
  "password": "password123"
}

### Create a user without name
POST {{server}}/api/users
Content-Type: application/json

{
  "email": "test@example.com",
  "password": "password123"
}

### Create a user without email
POST {{server}}/api/users
Content-Type: application/json

{
  "name": "Test User",
  "password": "password123"
}

### Create a user without password
POST {{server}}/api/users
Content-Type: application/json

{
  "name": "Test User",
  "email": "test@example.com"
}

### Create a user with duplicate email
POST {{server}}/api/users
Content-Type: application/json

{
  "name": "Test User 2",
  "email": "test@example.com",
  "password": "outrasenha456"
}

### Signin
# @name signin
POST {{server}}/api/signin
Content-Type: application/json

{
  "email": "test@example.com",
  "password": "password123"
}

### Read current user
GET {{server}}/api/users/me
Authorization: bearer {{token}}

### Signin 401
POST {{server}}/api/signin
Content-Type: application/json

{
  "email": "test@example.com",
  "password": "321"
}
